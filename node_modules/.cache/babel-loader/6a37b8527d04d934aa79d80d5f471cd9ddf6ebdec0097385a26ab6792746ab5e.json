{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import*as d3 from'd3';import*as topojson from'topojson-client';import'./styles.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Globe(){const globeRef=useRef(null);const[selectedCountry,setSelectedCountry]=useState(null);const isDragging=useRef(false);useEffect(()=>{const svg=d3.select(globeRef.current);const width=600;const height=600;// Projection du globe\nconst projection=d3.geoOrthographic().scale(190).translate([width/2,height/2]);const path=d3.geoPath().projection(projection);// Chargement des données du monde\nd3.json(\"https://unpkg.com/world-atlas@2.0.2/countries-110m.json\").then(data=>{const countries=topojson.feature(data,data.objects.countries);// Dessiner les pays\nsvg.selectAll(\"path\").data(countries.features).enter().append(\"path\").attr(\"class\",\"country\").attr(\"d\",path).attr(\"fill\",\"white\")// Couleur initiale du pays\n.on(\"mousedown\",function(event,d){isDragging.current=true;setSelectedCountry(d);svg.selectAll(\".country\").attr(\"fill\",country=>country===d?\"#ffcc00\":\"white\");globeRef.current.classList.add('shifted');}).attr(\"id\",d=>\"country-\".concat(d.id));// Ajouter un ID unique à chaque pays\nsvg.on(\"mousemove\",function(event){if(isDragging.current){const dx=event.movementX;const dy=event.movementY;const rotate=projection.rotate();const scaleFactor=0.25;rotate[0]+=dx*scaleFactor;rotate[1]-=dy*scaleFactor;projection.rotate(rotate);svg.selectAll(\"path\").attr(\"d\",path);}});svg.on(\"mouseup\",()=>{isDragging.current=false;});});},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"Globe\",children:[/*#__PURE__*/_jsx(\"svg\",{ref:globeRef,width:600,height:600}),selectedCountry&&/*#__PURE__*/_jsxs(\"div\",{className:\"popup\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"img/G1.png\",alt:selectedCountry.properties.name,style:{width:'350px'}}),/*#__PURE__*/_jsx(\"img\",{src:\"img/G2.png\",alt:selectedCountry.properties.name,style:{width:'350px'}}),/*#__PURE__*/_jsx(\"p\",{children:selectedCountry.properties.name})]})]});}export default Globe;","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","topojson","jsx","_jsx","jsxs","_jsxs","Globe","globeRef","selectedCountry","setSelectedCountry","isDragging","svg","select","current","width","height","projection","geoOrthographic","scale","translate","path","geoPath","json","then","data","countries","feature","objects","selectAll","features","enter","append","attr","on","event","d","country","classList","add","concat","id","dx","movementX","dy","movementY","rotate","scaleFactor","className","children","ref","src","alt","properties","name","style"],"sources":["/Users/amaillard/Desktop/Python/MineralsViz/src/Globe.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson-client';\nimport './styles.css';\n\nfunction Globe() {\n  const globeRef = useRef(null);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const isDragging = useRef(false);\n\n  useEffect(() => {\n    const svg = d3.select(globeRef.current);\n\n    const width = 600;\n    const height = 600;\n\n    // Projection du globe\n    const projection = d3.geoOrthographic()\n      .scale(190)\n      .translate([width / 2, height / 2]);\n\n    const path = d3.geoPath().projection(projection);\n\n    // Chargement des données du monde\n    d3.json(\"https://unpkg.com/world-atlas@2.0.2/countries-110m.json\").then(data => {\n      const countries = topojson.feature(data, data.objects.countries);\n\n      // Dessiner les pays\n      svg.selectAll(\"path\")\n        .data(countries.features)\n        .enter().append(\"path\")\n        .attr(\"class\", \"country\")\n        .attr(\"d\", path)\n        .attr(\"fill\", \"white\")  // Couleur initiale du pays\n        .on(\"mousedown\", function(event, d) {\n          isDragging.current = true;\n          setSelectedCountry(d);\n          svg.selectAll(\".country\").attr(\"fill\", country => (country === d ? \"#ffcc00\" : \"white\"));\n          globeRef.current.classList.add('shifted');\n        })\n        .attr(\"id\", d => `country-${d.id}`); // Ajouter un ID unique à chaque pays\n\n      svg.on(\"mousemove\", function(event) {\n        if (isDragging.current) {\n          const dx = event.movementX;\n          const dy = event.movementY;\n          const rotate = projection.rotate();\n          const scaleFactor = 0.25;\n\n          rotate[0] += dx * scaleFactor;\n          rotate[1] -= dy * scaleFactor;\n\n          projection.rotate(rotate);\n          svg.selectAll(\"path\").attr(\"d\", path);\n        }\n      });\n\n      svg.on(\"mouseup\", () => {\n        isDragging.current = false;\n      });\n\n    });\n\n  }, []);\n\n  return (\n    <div className=\"Globe\">\n      <svg ref={globeRef} width={600} height={600}></svg>\n      {selectedCountry && (\n        <div className=\"popup\">\n          <img src=\"img/G1.png\" alt={selectedCountry.properties.name} style={{ width: '350px' }}/>\n          <img src=\"img/G2.png\" alt={selectedCountry.properties.name} style={{ width: '350px' }}/>\n          <p>{selectedCountry.properties.name}</p>\n        </div>\n    \n      )}\n    </div>\n  );\n}\n\nexport default Globe;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}