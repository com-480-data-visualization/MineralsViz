{"ast":null,"code":"var _jsxFileName = \"/Users/amaillard/Desktop/Python/viz_test/test44/globe-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson-client';\n\n// function App() {\n//   const globeRef = useRef(null);\n\n//   useEffect(() => {\n//     const svg = d3.select(globeRef.current);\n\n//     const width = 400;\n//     const height = 400;\n\n//     // Projection du globe\n//     const projection = d3.geoOrthographic()\n//       .scale(190)\n//       .translate([width / 2, height / 2]);\n\n//     const path = d3.geoPath().projection(projection);\n\n//     // Chargement des données du monde\n//     d3.json(\"https://unpkg.com/world-atlas@2.0.2/countries-110m.json\").then(data => {\n//       const countries = topojson.feature(data, data.objects.countries);\n\n//       // Dessiner les pays\n//       svg.selectAll(\"path\")\n//         .data(countries.features)\n//         .enter().append(\"path\")\n//         .attr(\"class\", \"country\")\n//         .attr(\"d\", path);\n//         .on(\"click\", function(event, d) {\n//           console.log(d.properties.name);  // Affiche le nom du pays cliqué\n//         });\n//     });\n\n//     // Rotation du globe\n//     d3.timer(elapsed => {\n//       const rotate = projection.rotate();\n//       rotate[0] += 0.25;\n//       projection.rotate(rotate);\n//       svg.selectAll(\"path\").attr(\"d\", path);\n//     });\n\n//   }, []);\n\n//   return (\n//     <div className=\"App\">\n//       <svg ref={globeRef} width={400} height={400}></svg>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const globeRef = useRef(null);\n  useEffect(() => {\n    const svg = d3.select(globeRef.current);\n    svg.append(\"circle\").attr(\"cx\", 200).attr(\"cy\", 200).attr(\"r\", 100).attr(\"fill\", \"blue\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: globeRef,\n      width: 400,\n      height: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RnDsAY9k2/HDGJbJqxvzVF3XlM4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","d3","topojson","jsxDEV","_jsxDEV","App","_s","globeRef","svg","select","current","append","attr","className","children","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amaillard/Desktop/Python/viz_test/test44/globe-app/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson-client';\n\n// function App() {\n//   const globeRef = useRef(null);\n\n//   useEffect(() => {\n//     const svg = d3.select(globeRef.current);\n\n//     const width = 400;\n//     const height = 400;\n\n//     // Projection du globe\n//     const projection = d3.geoOrthographic()\n//       .scale(190)\n//       .translate([width / 2, height / 2]);\n\n//     const path = d3.geoPath().projection(projection);\n\n//     // Chargement des données du monde\n//     d3.json(\"https://unpkg.com/world-atlas@2.0.2/countries-110m.json\").then(data => {\n//       const countries = topojson.feature(data, data.objects.countries);\n\n//       // Dessiner les pays\n//       svg.selectAll(\"path\")\n//         .data(countries.features)\n//         .enter().append(\"path\")\n//         .attr(\"class\", \"country\")\n//         .attr(\"d\", path);\n//         .on(\"click\", function(event, d) {\n//           console.log(d.properties.name);  // Affiche le nom du pays cliqué\n//         });\n//     });\n\n//     // Rotation du globe\n//     d3.timer(elapsed => {\n//       const rotate = projection.rotate();\n//       rotate[0] += 0.25;\n//       projection.rotate(rotate);\n//       svg.selectAll(\"path\").attr(\"d\", path);\n//     });\n\n//   }, []);\n\n//   return (\n//     <div className=\"App\">\n//       <svg ref={globeRef} width={400} height={400}></svg>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nfunction App() {\n  const globeRef = useRef(null);\n\n  useEffect(() => {\n    const svg = d3.select(globeRef.current);\n    svg.append(\"circle\").attr(\"cx\", 200).attr(\"cy\", 200).attr(\"r\", 100).attr(\"fill\", \"blue\");\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <svg ref={globeRef} width={400} height={400}></svg>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAO,KAAKC,QAAQ,MAAM,iBAAiB;;AAE3C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMS,GAAG,GAAGP,EAAE,CAACQ,MAAM,CAACF,QAAQ,CAACG,OAAO,CAAC;IACvCF,GAAG,CAACG,MAAM,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAACA,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;EAC1F,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBV,OAAA;MAAKW,GAAG,EAAER,QAAS;MAACS,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACf,EAAA,CAbQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAeZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}